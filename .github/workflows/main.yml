name: Provision EC2 and Deploy Website

on:
  push:
    branches: ["main"]

jobs:
  provision-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo (Terraform + code)
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6   # or your version

      # Terraform Init
      - name: Terraform Init
        run: terraform init

      # Terraform Apply (auto-approve)
      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

      # Get Terraform outputs (EC2 Public IP)
      - name: Terraform Output
        id: tf-output
        run: |
          echo "EC2_IP=$(terraform output -raw ec2_public_ip)" >> $GITHUB_ENV

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build & Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my-website:latest

     name: Provision and Deploy

on:
  push:
    branches: ["main"]

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      ec2_ip: ${{ steps.tf.outputs.ec2_ip }}
      ec2_key: ${{ steps.tf.outputs.ec2_key }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Get Terraform Outputs
        id: tf
        run: |
          echo "ec2_ip=$(terraform output -raw ec2_public_ip)" >> $GITHUB_OUTPUT
          echo "ec2_key<<EOF" >> $GITHUB_OUTPUT
          terraform output -raw ec2_private_key >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  deploy:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my-website:latest

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ needs.terraform.outputs.ec2_ip }}
          username: ubuntu
          key: ${{ needs.terraform.outputs.ec2_key }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-website:latest
            docker stop website || true
            docker rm website || true
            docker run -d --name website -p 80:80 ${{ secrets.DOCKER_USERNAME }}/my-website:latest
